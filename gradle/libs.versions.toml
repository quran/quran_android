[versions]
agp = "8.8.0"
junit = "1.2.1"
kotlin = "2.1.0"
ksp = "2.1.0-1.0.29"

# required within the Gradle convention plugins - not unused
composeBomVersion = "2025.01.00"
media3ExoplayerVersion = "1.5.1"
okhttpBomVersion = "4.12.0"

# dependencies
anvil = "0.4.1"
coroutinesVersion = "1.10.1"
crashlytics = "3.0.2"
daggerVersion = "2.55"
dnsjavaVersion = "2.1.9"
errorprone = "4.1.0"
errorproneCoreVersion = "2.36.0"
googleServices = "4.4.2"
immutableCollectionsVersion = "0.3.8"
leakcanaryAndroidVersion = "2.14"
moshiVersion = "1.15.2"
okioVersion = "3.10.2"
retrofitVersion = "2.11.0"
rxandroidVersion = "3.0.2"
rxjavaVersion = "3.1.10"
sqldelight = "2.0.2"
timberVersion = "5.0.1"

# androidx library versions
androidxAppcompatVersion = "1.7.0"
androidxActivityComposeVersion = "1.10.0"
androidxAnnotationVersion = "1.9.1"
androidxCoreVersion = "1.15.0"
androidxNavigationVersion = "2.8.5"
androidxDynamicAnimationVersion = "1.0.0"
androidxFragmentVersion = "1.8.5"
androidxJunitExtVersion = "1.2.1"
androidxLocalBroadcastVersion = "1.1.0"
androidxMediaVersion = "1.7.0"
androidxPreferencesVersion = "1.2.1"
androidxRecyclerViewVersion = "1.4.0"
androidxSwipeRefreshVersion = "1.1.0"
androidxPagingVersion = "3.3.5"
androidxPagingComposeVersion = "3.3.5"
androidxWorkManagerVersion = "2.10.0"
androidxWindowManager = "1.3.0"

# firebase
firebaseAnalyticsVersion = "22.2.0"
firebaseCrashlyticsVersion = "19.4.0"

# ui libraries
accompanistVersion = "0.36.0"
balloonVersion = "1.6.11"
tooltipComposeVersion = "0.2.0"
insetterVersion = "0.6.1"
materialComponentsVersion = "1.12.0"
numberPickerVersion = "2.4.13"
reorderableComposeVersion = "0.9.6"
molecule = "2.0.0"

# recitations
grpcOkhttpVersion = "1.69.1"
googleAuthVersion = "1.30.1"
googleCloudSpeechVersion = "4.51.0"

# testing
junitVersion = "4.13.2"
espressoVersion = "3.6.1"
truthVersion = "1.4.4"
mockitoVersion = "5.15.2"
robolectricVersion = "4.14.1"
turbineVersion = "1.2.0"

[libraries]
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "junit" }
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "media3ExoplayerVersion" }
androidx-media3-exoplayer-dash = { module = "androidx.media3:media3-exoplayer-dash", version.ref = "media3ExoplayerVersion" }
androidx-media3-session = { module = "androidx.media3:media3-session", version.ref = "media3ExoplayerVersion" }
androidx-media3-ui = { module = "androidx.media3:media3-ui", version.ref = "media3ExoplayerVersion" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutinesVersion" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "immutableCollectionsVersion" }

# required within the Gradle convention plugins - not unused
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttpBomVersion" }
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBomVersion" }

# androidx
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompatVersion" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidxCoreVersion" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityComposeVersion" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidxAnnotationVersion" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragmentVersion" }
androidx-localbroadcastmanager = { module = "androidx.localbroadcastmanager:localbroadcastmanager", version.ref = "androidxLocalBroadcastVersion" }
androidx-dynamicanimation = { module = "androidx.dynamicanimation:dynamicanimation", version.ref = "androidxDynamicAnimationVersion" }
androidx-media = { module = "androidx.media:media", version.ref = "androidxMediaVersion" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidxPreferencesVersion" }
androidx-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidxRecyclerViewVersion" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "androidxSwipeRefreshVersion" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWorkManagerVersion" }
androidx-paging-runtime-ktx = { module = "androidx.paging:paging-runtime-ktx", version.ref = "androidxPagingVersion" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidxPagingComposeVersion" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigationVersion" }
androidx-window = { module = "androidx.window:window", version.ref = "androidxWindowManager" }
# compose
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-animation = { module = "androidx.compose.animation:animation" }
compose-material = { module = "androidx.compose.material:material" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }

material = { module = "com.google.android.material:material", version.ref = "materialComponentsVersion" }

# dagger
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion"}
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "daggerVersion" }

# molecule
molecule = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }

# moshi
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshiVersion" }
moshi-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiVersion" }

# okio
okio = { module = "com.squareup.okio:okio", version.ref = "okioVersion" }
okio-fakefilesystem = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okioVersion" }

# okhttp
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-mockserver = { module = "com.squareup.okhttp3:mockwebserver" }
okhttp-dnsoverhttps = { module = "com.squareup.okhttp3:okhttp-dnsoverhttps" }
okhttp-tls = { module = "com.squareup.okhttp3:okhttp-tls" }

# rx
rxandroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxandroidVersion" }
rxjava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxjavaVersion" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofitVersion" }

# sqldelight
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions-jvm", version.ref = "sqldelight" }
sqldelight-paging3-extensions = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sqldelight" }
sqldelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }

# recitation
grpc-okhttp = { module = "io.grpc:grpc-okhttp", version.ref = "grpcOkhttpVersion" }
google-cloud-speech = { module = "com.google.cloud:google-cloud-speech", version.ref = "googleCloudSpeechVersion" }
google-auth = { module = "com.google.auth:google-auth-library-oauth2-http", version.ref = "googleAuthVersion" }

# ui libraries
balloon = { module = "com.github.skydoves:balloon", version.ref = "balloonVersion" }
number-picker = { module = "io.github.ShawnLin013:number-picker", version.ref = "numberPickerVersion" }
insetter = { module = "dev.chrisbanes.insetter:insetter", version.ref = "insetterVersion" }
accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanistVersion" }
tooltip-compose = { module = "com.github.skgmn:composetooltip", version.ref = "tooltipComposeVersion" }
reorderable-compose = { module = "org.burnoutcrew.composereorderable:reorderable", version.ref = "reorderableComposeVersion" }

# utils
leakcanary-android = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanaryAndroidVersion" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timberVersion" }
dnsjava = { module = "dnsjava:dnsjava", version.ref = "dnsjavaVersion" }

# tools
errorprone-core = { module = "com.google.errorprone:error_prone_core", version.ref = "errorproneCoreVersion" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebaseAnalyticsVersion" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics", version.ref = "firebaseCrashlyticsVersion" }

# testing
espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref = "espressoVersion" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoVersion" }
junit = { module = "junit:junit", version.ref = "junitVersion" }
junit-ktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidxJunitExtVersion" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoVersion" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectricVersion" }
truth = { module = "com.google.truth:truth", version.ref = "truthVersion" }
turbine = { module = "app.cash.turbine:turbine-jvm", version.ref = "turbineVersion" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesVersion" }

# build-logic
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
compose-compiler-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
sqldelight-gradlePlugin = { module = "app.cash.sqldelight:gradle-plugin", version.ref = "sqldelight" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
anvil = { id = "dev.zacsweers.anvil", version.ref = "anvil"}
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
errorprone = { id = "net.ltgt.errorprone", version.ref = "errorprone" }
